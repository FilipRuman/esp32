Command: ninja flash
[1/10] Performing build step for 'bootloader'
[1/1] cd /home/f/git/esp_tests/oled/build/bootloader/esp-idf/esptool_py && /nix/store/x6sc9qfsz5ki13s9faaiblwg3js78ma8-python3-3.12.11-env/bin/python3.12 /nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/f/git/esp_tests/oled/build/bootloader/bootloader.bin
Bootloader binary size 0x6680 bytes. 0x980 bytes (8%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating esp-idf/esp_system/ld/sections.ld
[7/10] Linking CXX executable oled.elf
[8/10] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/f/git/esp_tests/oled/build/oled.bin
[9/10] cd /home/f/git/esp_tests/oled/build/esp-idf/esptool_py && /nix/store/x6sc9qfsz5ki13s9faaiblwg3js78ma8-python3-3.12.11-env/bin/python3.12 /nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/f/git/esp_tests/oled/build/partition_table/partition-table.bin /home/f/git/esp_tests/oled/build/oled.bin
oled.bin binary size 0x32e90 bytes. Smallest app partition is 0x100000 bytes. 0xcd170 bytes (80%) free.
[9/10] cd /nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1/components/esptool_py && /nix/store/fxpx9xaw1p55zk1jyri15w9zlb0s3g6z-cmake-3.31.6/bin/cmake -D IDF_PATH=/nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1 -D "SERIAL_TOOL=/nix/store/x6sc9qfsz5ki13s9faaiblwg3js78ma8-python3-3.12.11-env/bin/python3.12;;/nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/f/git/esp_tests/oled/build -P /nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 oled.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.9.0
Serial port /dev/ttyUSB0

A fatal error occurred: Could not open /dev/ttyUSB0, the port is busy or doesn't exist.
([Errno 2] could not open port /dev/ttyUSB0: [Errno 2] No such file or directory: '/dev/ttyUSB0')

Hint: Check if the port is correct and ESP connected

FAILED: CMakeFiles/flash /home/f/git/esp_tests/oled/build/CMakeFiles/flash 
cd /nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1/components/esptool_py && /nix/store/fxpx9xaw1p55zk1jyri15w9zlb0s3g6z-cmake-3.31.6/bin/cmake -D IDF_PATH=/nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1 -D "SERIAL_TOOL=/nix/store/x6sc9qfsz5ki13s9faaiblwg3js78ma8-python3-3.12.11-env/bin/python3.12;;/nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/f/git/esp_tests/oled/build -P /nix/store/3kwgdiamcz3g9z6889bir2lqp0sd6paz-esp-idf-v5.5.1/components/esptool_py/run_serial_tool.cmake
ninja: build stopped: subcommand failed.
